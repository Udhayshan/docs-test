openapi: 3.0.1
info:
  title: CompositeAssetDefinitions APIs
  description: API for CompositeAssetDefinitions
  version: 1.1.0
tags:
- name: CompositeAssetDefinitions
  description: Operations related to CompositeAssetDefinitions
paths:
  /api/v1/accounts/{account-id}/composite-asset-definitions/{definition-id}:
    get:
      tags:
      - CompositeAssetDefinitions
      summary: Retrieve the detials related to a specific definition id
      operationId: Get composite asset Definition
      parameters:
      - name: account-id
        in: path
        description: The ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: definition-id
        in: path
        description: The ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/CompositeAssetDefinitionDetail"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/ErrorResponse"
              example:
                status: ERROR
                message: Composite asset Id definition not found
                statusCode: "404"
        "500":
          description: Server error
    put:
      tags:
      - CompositeAssetDefinitions
      summary: ' Updated the details related to a specific composite definition id
        If the definition has not been used by any entity / import or integration
        then all details can be changed. However if the definition has been used by
        previous imports or operations '
      operationId: Edit existing component definition
      parameters:
      - name: account-id
        in: path
        description: The ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: definition-id
        in: path
        description: The ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Composite asset details details
        content:
          application/json:
            schema:
              $ref: "../schema/schemas.yaml#/components/schemas/CompositeAssetDefinitionDetailEditRequest"
        required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/CompositeAssetDefinitionValidationResponse"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/ErrorResponse"
              example:
                status: ERROR
                message: Composite asset Id definition not found
                statusCode: "404"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/ErrorResponse"
              example:
                status: ERROR
                message: Invalid request
                statusCode: "400"
        "500":
          description: Server error
    delete:
      tags:
      - CompositeAssetDefinitions
      summary: Delete composite asset Definition and related mapping
      operationId: Delete composite asset Definition and related mapping
      parameters:
      - name: account-id
        in: path
        description: The ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: definition-id
        in: path
        description: The ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: Successfully deleted
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/ErrorResponse"
              example:
                status: ERROR
                message: Composite asset Id definition not found
                statusCode: "404"
        "500":
          description: Server error
  /api/v1/accounts/{account-id}/composite-asset-definitions/_validate:
    post:
      tags:
      - CompositeAssetDefinitions
      summary: Used to Validate a new composite asset definition  / scripts
      operationId: Validate script / composite asset definition
      parameters:
      - name: account-id
        in: path
        description: The ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: CompositeAssetDefinition
        content:
          application/json:
            schema:
              $ref: "../schema/schemas.yaml#/components/schemas/CompositeAssetDefinition"
        required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/ValidationResponse"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/ErrorResponse"
              example:
                status: ERROR
                message: Composite Group not found
                statusCode: "400"
        "500":
          description: Server error
  /api/v1/accounts/{account-id}/composite-asset-definitions/connector/{connector-id}:
    get:
      tags:
      - CompositeAssetDefinitions
      summary: "Retrieve the composite asset definition of a connector - if connector\
        \ does not have a mapping , gets default composite asset definition of a integration\
        \ - if no default, then returns only the flag saying no composite definition"
      operationId: Get composite asset Definition for a connector
      parameters:
      - name: account-id
        in: path
        description: The ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: connector-id
        in: path
        description: The ID of the connector
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/ConnectorCompositeAssetDefinitionResponse"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/ErrorResponse"
              example:
                status: ERROR
                message: Connector Id not found
                statusCode: "404"
        "500":
          description: Server error
    post:
      tags:
      - CompositeAssetDefinitions
      summary: "Assigns a composite definition to a connector, If the composite Asset\
        \ Definition id is 0 (Zero) Any existing mapping to the connector will be\
        \ unmapped"
      operationId: Map composite asset definition to a connector
      parameters:
      - name: account-id
        in: path
        description: The ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: connector-id
        in: path
        description: The ID of the connector
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Composite asset details details
        content:
          application/json:
            schema:
              $ref: "../schema/schemas.yaml#/components/schemas/UpdateCompositeAssetDefMappingOfConnector"
        required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/OperationResponse"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/ErrorResponse"
              example:
                status: ERROR
                message: Connector Id not found
                statusCode: "404"
        "500":
          description: Server error
  /api/v1/accounts/{account-id}/composite-asset-definitions:
    get:
      tags:
      - CompositeAssetDefinitions
      summary: Retrieve all composite asset definition related to the account.
      operationId: getAllCompositeAssetDefinitions
      parameters:
      - name: account-id
        in: path
        description: The ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: next
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          description: The Page number of result
          format: int32
          default: 1
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          description: The maximum number of integrations per page
          format: int32
          default: 20
      - name: integrationId
        in: query
        description: The Integration Id to filter by
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          default: ALL
      - name: searchText
        in: query
        description: filter result containing value of the searchText
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
      - name: name
        in: query
        description: The composite asset definition Name to filter by
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          default: ALL
      - name: connectorName
        in: query
        description: The connector Name to filter by
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          default: ALL
      - name: createdOnAfter
        in: query
        description: Filter composite asset id definition created after
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 2024-03-28T04:35:53Z
      - name: createdOnBefore
        in: query
        description: Filter composite asset id definition created before
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: createdBy
        in: query
        description: Filter field for created by
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ALL
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/ListCompositeAssetDefinitionResponse"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/ErrorResponse"
              example:
                status: ERROR
                message: Invalid parameter
                statusCode: "400"
        "500":
          description: Server error
    post:
      tags:
      - CompositeAssetDefinitions
      summary: 'Used to create a new composite asset definition '
      operationId: Create composite asset definition
      parameters:
      - name: account-id
        in: path
        description: The ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Composite asset details details
        content:
          application/json:
            schema:
              $ref: "../schema/schemas.yaml#/components/schemas/CreateCompositeAssetDefinitionDetail"
        required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/CompositeAssetDefinitionValidationResponse"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "../schema/schemas.yaml#/components/schemas/ErrorResponse"
              example:
                status: ERROR
                message: Invalid parameter
                statusCode: "400"
        "500":
          description: Server error
components:
  schemas: {}
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
